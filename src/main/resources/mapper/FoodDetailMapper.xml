<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blm.dao.FoodDetailMapper">
  <resultMap id="BaseResultMap" type="com.blm.bean.FoodDetail">
    <constructor>
      <idArg column="foodid" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="foodname" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="othername" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="price" javaType="java.lang.Float" jdbcType="REAL" />
      <arg column="description" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="picpath" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="isvalid" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    foodid, foodname, othername, price, description, picpath, isvalid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from fooddetail
    where foodid = #{foodid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from fooddetail
    where foodid = #{foodid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.blm.bean.FoodDetail">
    insert into fooddetail (foodid, foodname, othername,
      price, description, picpath,
      isvalid)
    values (#{foodid,jdbcType=VARCHAR}, #{foodname,jdbcType=VARCHAR}, #{othername,jdbcType=VARCHAR},
      #{price,jdbcType=REAL}, #{description,jdbcType=VARCHAR}, #{picpath,jdbcType=VARCHAR},
      #{isvalid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.blm.bean.FoodDetail">
    insert into fooddetail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="foodid != null">
        foodid,
      </if>
      <if test="foodname != null">
        foodname,
      </if>
      <if test="othername != null">
        othername,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="picpath != null">
        picpath,
      </if>
      <if test="isvalid != null">
        isvalid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="foodid != null">
        #{foodid,jdbcType=VARCHAR},
      </if>
      <if test="foodname != null">
        #{foodname,jdbcType=VARCHAR},
      </if>
      <if test="othername != null">
        #{othername,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=REAL},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="picpath != null">
        #{picpath,jdbcType=VARCHAR},
      </if>
      <if test="isvalid != null">
        #{isvalid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.blm.bean.FoodDetail">
    update fooddetail
    <set>
      <if test="foodname != null">
        foodname = #{foodname,jdbcType=VARCHAR},
      </if>
      <if test="othername != null">
        othername = #{othername,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=REAL},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="picpath != null">
        picpath = #{picpath,jdbcType=VARCHAR},
      </if>
      <if test="isvalid != null">
        isvalid = #{isvalid,jdbcType=INTEGER},
      </if>
    </set>
    where foodid = #{foodid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blm.bean.FoodDetail">
    update fooddetail
    set foodname = #{foodname,jdbcType=VARCHAR},
      othername = #{othername,jdbcType=VARCHAR},
      price = #{price,jdbcType=REAL},
      description = #{description,jdbcType=VARCHAR},
      picpath = #{picpath,jdbcType=VARCHAR},
      isvalid = #{isvalid,jdbcType=INTEGER}
    where foodid = #{foodid,jdbcType=VARCHAR}
  </update>





  <select id="find_zy" parameterType="Map" resultType="com.blm.bean.FoodDetail">
    select
    f.foodid,f.foodname,f.othername,f.price,f.description,f.picpath
    from user u,storedetail s,checkfood c,fooddetail f
    where u.userid=s.userid and s.storeid=c.storeid and c.foodid=f.foodid  and u.username=#{username}
      <if test="foodname!=null and foodname!='' ">
        and foodname like #{foodname}
      </if>
    <if test="start!=null and size!=null">
      limit #{start},#{size}
    </if>
  </select>

  <select id="getTotal" parameterType="Map" resultType="Long">
    select count(*) from fooddetail
    <where>
      <if test="foodname!=null and foodname!='' ">
        and foodname like #{foodname}
      </if>
      <if test="othername!=null and othername!='' ">
        and othername like #{othername}
      </if>
    </where>
  </select>

  <insert id="add" parameterType="com.blm.bean.FoodDetail">
    insert into fooddetail ( foodid,foodname, othername,
      price, description,picpath, isvalid
      )
    values (#{foodid,jdbcType=VARCHAR}, #{foodname,jdbcType=VARCHAR}, #{othername,jdbcType=VARCHAR},
      #{price,jdbcType=REAL}, #{description,jdbcType=VARCHAR},#{picpath,jdbcType=VARCHAR}, #{isvalid,jdbcType=INTEGER}
      )
  </insert>

  <update id="update" parameterType="com.blm.bean.FoodDetail">
    update fooddetail
    <set>
      <if test="foodname!=null and foodname!='' ">
        foodname=#{foodname},
      </if>
      <if test="othername!=null and othername!='' ">
        othername=#{othername},
      </if>
      <if test="price!=null and price!='' ">
        price=#{price},
      </if>
      <if test="description!=null and description!='' ">
        description=#{description},
      </if>
    </set>
    where foodid=#{foodid}
  </update>

  <delete id="delete" parameterType="com.blm.bean.FoodDetail">
		delete from fooddetail where foodid=#{foodid}
	</delete>
</mapper>
